{"mappings":"oeAAAA,EAAA,SAEaC,SAASC,cAAc,QAM/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAUWC,EATP,EASiBC,EATdL,EAAMM,MAUP,IAAIC,SAAQ,CAACC,EAASC,KACdC,KAAKC,SAAW,IAEpCH,EAAQ,uBAAqBJ,QAAiBC,OAE9CI,EAAK,sBAAoBL,QAAiBC,MAAU,IAGrDO,MAAK,EAACZ,MAAEA,MACPa,QAAQC,IAAI,uBAAqBV,QAAiBJ,MAAU,IAE7De,OAAM,EAACf,MAAEA,MACRa,QAAQC,IAAI,sBAAoBV,QAAeJ,MAAU,IAb/D,IAAuBI,EAAUC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nlet valuePromise = {};\n\nlet result = '';\n\nform.addEventListener('submit', onFormSumit);\n\nfunction onFormSumit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  createPromise(2, delay.value);\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  promise\n    .then(({ delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","position","delay1","value","Promise","resolve","reject","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.82d79073.js.map"}